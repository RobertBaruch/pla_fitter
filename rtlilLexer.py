# Generated from rtlil.g4 by ANTLR 4.9.1
from antlr4 import *
from io import StringIO
from typing.io import TextIO
import sys


from rtlil import *

curr_module = None



def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2,")
        buf.write("\u016d\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\3")
        buf.write("\3\3\3\3\3\3\3\3\3\4\3\4\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3")
        buf.write("\5\3\5\3\5\3\5\3\5\3\6\3\6\3\6\3\6\3\6\3\7\3\7\3\7\3\7")
        buf.write("\3\7\3\7\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\t\3\t\3\t\3\t\3")
        buf.write("\t\3\t\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3\13")
        buf.write("\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3\r")
        buf.write("\3\r\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\17\3\17")
        buf.write("\3\20\3\20\3\21\3\21\3\22\3\22\3\23\3\23\3\24\3\24\3\24")
        buf.write("\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3\26\3\26\3\26\3\26")
        buf.write("\3\26\3\26\3\26\3\26\3\27\3\27\3\27\3\27\3\27\3\27\3\27")
        buf.write("\3\30\3\30\3\30\3\30\3\30\3\31\3\31\3\32\3\32\3\32\3\32")
        buf.write("\3\32\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\34\3\34\3\34")
        buf.write("\3\34\3\34\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\36\3\36")
        buf.write("\3\36\3\36\3\37\3\37\3\37\3\37\3\37\3 \3 \3 \3 \3 \3 ")
        buf.write("\3 \3 \3!\3!\3!\3!\3!\3!\3!\3!\3\"\3\"\3\"\3\"\3\"\3#")
        buf.write("\3#\3#\3#\3#\3#\3#\3$\3$\3$\3$\3$\3$\3$\3%\3%\3%\3%\3")
        buf.write("%\3%\3%\3%\3%\3%\3&\3&\7&\u0130\n&\f&\16&\u0133\13&\3")
        buf.write("&\3&\3\'\3\'\6\'\u0139\n\'\r\'\16\'\u013a\3(\6(\u013e")
        buf.write("\n(\r(\16(\u013f\3(\3(\7(\u0144\n(\f(\16(\u0147\13(\3")
        buf.write(")\5)\u014a\n)\3)\6)\u014d\n)\r)\16)\u014e\3*\6*\u0152")
        buf.write("\n*\r*\16*\u0153\3+\3+\5+\u0158\n+\3+\3+\3,\3,\7,\u015e")
        buf.write("\n,\f,\16,\u0161\13,\3,\3,\3-\6-\u0166\n-\r-\16-\u0167")
        buf.write("\3.\3.\3/\3/\3\u0131\2\60\3\3\5\4\7\5\t\6\13\7\r\b\17")
        buf.write("\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23")
        buf.write("%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36")
        buf.write(";\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W\2Y\2[\2]\2\3\2\b\4\2")
        buf.write("&&^^\3\2#\u0101\4\2\f\f\17\17\4\2\13\13\"\"\3\2\62;\7")
        buf.write("\2//\62\63oozz||\2\u0172\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3")
        buf.write("\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2")
        buf.write("\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2")
        buf.write("\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2")
        buf.write("!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2")
        buf.write("\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3")
        buf.write("\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2")
        buf.write("\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2")
        buf.write("\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2")
        buf.write("\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\3_\3\2\2\2\5g\3")
        buf.write("\2\2\2\7n\3\2\2\2\tr\3\2\2\2\13|\3\2\2\2\r\u0081\3\2\2")
        buf.write("\2\17\u0087\3\2\2\2\21\u008e\3\2\2\2\23\u0094\3\2\2\2")
        buf.write("\25\u009b\3\2\2\2\27\u00a1\3\2\2\2\31\u00a6\3\2\2\2\33")
        buf.write("\u00ad\3\2\2\2\35\u00b5\3\2\2\2\37\u00b7\3\2\2\2!\u00b9")
        buf.write("\3\2\2\2#\u00bb\3\2\2\2%\u00bd\3\2\2\2\'\u00bf\3\2\2\2")
        buf.write(")\u00c4\3\2\2\2+\u00c9\3\2\2\2-\u00d1\3\2\2\2/\u00d8\3")
        buf.write("\2\2\2\61\u00dd\3\2\2\2\63\u00df\3\2\2\2\65\u00e4\3\2")
        buf.write("\2\2\67\u00eb\3\2\2\29\u00f0\3\2\2\2;\u00f7\3\2\2\2=\u00fb")
        buf.write("\3\2\2\2?\u0100\3\2\2\2A\u0108\3\2\2\2C\u0110\3\2\2\2")
        buf.write("E\u0115\3\2\2\2G\u011c\3\2\2\2I\u0123\3\2\2\2K\u012d\3")
        buf.write("\2\2\2M\u0136\3\2\2\2O\u013d\3\2\2\2Q\u0149\3\2\2\2S\u0151")
        buf.write("\3\2\2\2U\u0157\3\2\2\2W\u015b\3\2\2\2Y\u0165\3\2\2\2")
        buf.write("[\u0169\3\2\2\2]\u016b\3\2\2\2_`\7c\2\2`a\7w\2\2ab\7v")
        buf.write("\2\2bc\7q\2\2cd\7k\2\2de\7f\2\2ef\7z\2\2f\4\3\2\2\2gh")
        buf.write("\7o\2\2hi\7q\2\2ij\7f\2\2jk\7w\2\2kl\7n\2\2lm\7g\2\2m")
        buf.write("\6\3\2\2\2no\7g\2\2op\7p\2\2pq\7f\2\2q\b\3\2\2\2rs\7r")
        buf.write("\2\2st\7c\2\2tu\7t\2\2uv\7c\2\2vw\7o\2\2wx\7g\2\2xy\7")
        buf.write("v\2\2yz\7g\2\2z{\7t\2\2{\n\3\2\2\2|}\7y\2\2}~\7k\2\2~")
        buf.write("\177\7t\2\2\177\u0080\7g\2\2\u0080\f\3\2\2\2\u0081\u0082")
        buf.write("\7y\2\2\u0082\u0083\7k\2\2\u0083\u0084\7f\2\2\u0084\u0085")
        buf.write("\7v\2\2\u0085\u0086\7j\2\2\u0086\16\3\2\2\2\u0087\u0088")
        buf.write("\7q\2\2\u0088\u0089\7h\2\2\u0089\u008a\7h\2\2\u008a\u008b")
        buf.write("\7u\2\2\u008b\u008c\7g\2\2\u008c\u008d\7v\2\2\u008d\20")
        buf.write("\3\2\2\2\u008e\u008f\7k\2\2\u008f\u0090\7p\2\2\u0090\u0091")
        buf.write("\7r\2\2\u0091\u0092\7w\2\2\u0092\u0093\7v\2\2\u0093\22")
        buf.write("\3\2\2\2\u0094\u0095\7q\2\2\u0095\u0096\7w\2\2\u0096\u0097")
        buf.write("\7v\2\2\u0097\u0098\7r\2\2\u0098\u0099\7w\2\2\u0099\u009a")
        buf.write("\7v\2\2\u009a\24\3\2\2\2\u009b\u009c\7k\2\2\u009c\u009d")
        buf.write("\7p\2\2\u009d\u009e\7q\2\2\u009e\u009f\7w\2\2\u009f\u00a0")
        buf.write("\7v\2\2\u00a0\26\3\2\2\2\u00a1\u00a2\7w\2\2\u00a2\u00a3")
        buf.write("\7r\2\2\u00a3\u00a4\7v\2\2\u00a4\u00a5\7q\2\2\u00a5\30")
        buf.write("\3\2\2\2\u00a6\u00a7\7u\2\2\u00a7\u00a8\7k\2\2\u00a8\u00a9")
        buf.write("\7i\2\2\u00a9\u00aa\7p\2\2\u00aa\u00ab\7g\2\2\u00ab\u00ac")
        buf.write("\7f\2\2\u00ac\32\3\2\2\2\u00ad\u00ae\7e\2\2\u00ae\u00af")
        buf.write("\7q\2\2\u00af\u00b0\7p\2\2\u00b0\u00b1\7p\2\2\u00b1\u00b2")
        buf.write("\7g\2\2\u00b2\u00b3\7e\2\2\u00b3\u00b4\7v\2\2\u00b4\34")
        buf.write("\3\2\2\2\u00b5\u00b6\7]\2\2\u00b6\36\3\2\2\2\u00b7\u00b8")
        buf.write("\7<\2\2\u00b8 \3\2\2\2\u00b9\u00ba\7_\2\2\u00ba\"\3\2")
        buf.write("\2\2\u00bb\u00bc\7}\2\2\u00bc$\3\2\2\2\u00bd\u00be\7\177")
        buf.write("\2\2\u00be&\3\2\2\2\u00bf\u00c0\7e\2\2\u00c0\u00c1\7g")
        buf.write("\2\2\u00c1\u00c2\7n\2\2\u00c2\u00c3\7n\2\2\u00c3(\3\2")
        buf.write("\2\2\u00c4\u00c5\7t\2\2\u00c5\u00c6\7g\2\2\u00c6\u00c7")
        buf.write("\7c\2\2\u00c7\u00c8\7n\2\2\u00c8*\3\2\2\2\u00c9\u00ca")
        buf.write("\7r\2\2\u00ca\u00cb\7t\2\2\u00cb\u00cc\7q\2\2\u00cc\u00cd")
        buf.write("\7e\2\2\u00cd\u00ce\7g\2\2\u00ce\u00cf\7u\2\2\u00cf\u00d0")
        buf.write("\7u\2\2\u00d0,\3\2\2\2\u00d1\u00d2\7u\2\2\u00d2\u00d3")
        buf.write("\7y\2\2\u00d3\u00d4\7k\2\2\u00d4\u00d5\7v\2\2\u00d5\u00d6")
        buf.write("\7e\2\2\u00d6\u00d7\7j\2\2\u00d7.\3\2\2\2\u00d8\u00d9")
        buf.write("\7e\2\2\u00d9\u00da\7c\2\2\u00da\u00db\7u\2\2\u00db\u00dc")
        buf.write("\7g\2\2\u00dc\60\3\2\2\2\u00dd\u00de\7.\2\2\u00de\62\3")
        buf.write("\2\2\2\u00df\u00e0\7u\2\2\u00e0\u00e1\7{\2\2\u00e1\u00e2")
        buf.write("\7p\2\2\u00e2\u00e3\7e\2\2\u00e3\64\3\2\2\2\u00e4\u00e5")
        buf.write("\7i\2\2\u00e5\u00e6\7n\2\2\u00e6\u00e7\7q\2\2\u00e7\u00e8")
        buf.write("\7d\2\2\u00e8\u00e9\7c\2\2\u00e9\u00ea\7n\2\2\u00ea\66")
        buf.write("\3\2\2\2\u00eb\u00ec\7k\2\2\u00ec\u00ed\7p\2\2\u00ed\u00ee")
        buf.write("\7k\2\2\u00ee\u00ef\7v\2\2\u00ef8\3\2\2\2\u00f0\u00f1")
        buf.write("\7c\2\2\u00f1\u00f2\7n\2\2\u00f2\u00f3\7y\2\2\u00f3\u00f4")
        buf.write("\7c\2\2\u00f4\u00f5\7{\2\2\u00f5\u00f6\7u\2\2\u00f6:\3")
        buf.write("\2\2\2\u00f7\u00f8\7n\2\2\u00f8\u00f9\7q\2\2\u00f9\u00fa")
        buf.write("\7y\2\2\u00fa<\3\2\2\2\u00fb\u00fc\7j\2\2\u00fc\u00fd")
        buf.write("\7k\2\2\u00fd\u00fe\7i\2\2\u00fe\u00ff\7j\2\2\u00ff>\3")
        buf.write("\2\2\2\u0100\u0101\7r\2\2\u0101\u0102\7q\2\2\u0102\u0103")
        buf.write("\7u\2\2\u0103\u0104\7g\2\2\u0104\u0105\7f\2\2\u0105\u0106")
        buf.write("\7i\2\2\u0106\u0107\7g\2\2\u0107@\3\2\2\2\u0108\u0109")
        buf.write("\7p\2\2\u0109\u010a\7g\2\2\u010a\u010b\7i\2\2\u010b\u010c")
        buf.write("\7g\2\2\u010c\u010d\7f\2\2\u010d\u010e\7i\2\2\u010e\u010f")
        buf.write("\7g\2\2\u010fB\3\2\2\2\u0110\u0111\7g\2\2\u0111\u0112")
        buf.write("\7f\2\2\u0112\u0113\7i\2\2\u0113\u0114\7g\2\2\u0114D\3")
        buf.write("\2\2\2\u0115\u0116\7w\2\2\u0116\u0117\7r\2\2\u0117\u0118")
        buf.write("\7f\2\2\u0118\u0119\7c\2\2\u0119\u011a\7v\2\2\u011a\u011b")
        buf.write("\7g\2\2\u011bF\3\2\2\2\u011c\u011d\7c\2\2\u011d\u011e")
        buf.write("\7u\2\2\u011e\u011f\7u\2\2\u011f\u0120\7k\2\2\u0120\u0121")
        buf.write("\7i\2\2\u0121\u0122\7p\2\2\u0122H\3\2\2\2\u0123\u0124")
        buf.write("\7c\2\2\u0124\u0125\7v\2\2\u0125\u0126\7v\2\2\u0126\u0127")
        buf.write("\7t\2\2\u0127\u0128\7k\2\2\u0128\u0129\7d\2\2\u0129\u012a")
        buf.write("\7w\2\2\u012a\u012b\7v\2\2\u012b\u012c\7g\2\2\u012cJ\3")
        buf.write("\2\2\2\u012d\u0131\7$\2\2\u012e\u0130\13\2\2\2\u012f\u012e")
        buf.write("\3\2\2\2\u0130\u0133\3\2\2\2\u0131\u0132\3\2\2\2\u0131")
        buf.write("\u012f\3\2\2\2\u0132\u0134\3\2\2\2\u0133\u0131\3\2\2\2")
        buf.write("\u0134\u0135\7$\2\2\u0135L\3\2\2\2\u0136\u0138\t\2\2\2")
        buf.write("\u0137\u0139\t\3\2\2\u0138\u0137\3\2\2\2\u0139\u013a\3")
        buf.write("\2\2\2\u013a\u0138\3\2\2\2\u013a\u013b\3\2\2\2\u013bN")
        buf.write("\3\2\2\2\u013c\u013e\5[.\2\u013d\u013c\3\2\2\2\u013e\u013f")
        buf.write("\3\2\2\2\u013f\u013d\3\2\2\2\u013f\u0140\3\2\2\2\u0140")
        buf.write("\u0141\3\2\2\2\u0141\u0145\7)\2\2\u0142\u0144\5]/\2\u0143")
        buf.write("\u0142\3\2\2\2\u0144\u0147\3\2\2\2\u0145\u0143\3\2\2\2")
        buf.write("\u0145\u0146\3\2\2\2\u0146P\3\2\2\2\u0147\u0145\3\2\2")
        buf.write("\2\u0148\u014a\7/\2\2\u0149\u0148\3\2\2\2\u0149\u014a")
        buf.write("\3\2\2\2\u014a\u014c\3\2\2\2\u014b\u014d\5[.\2\u014c\u014b")
        buf.write("\3\2\2\2\u014d\u014e\3\2\2\2\u014e\u014c\3\2\2\2\u014e")
        buf.write("\u014f\3\2\2\2\u014fR\3\2\2\2\u0150\u0152\t\4\2\2\u0151")
        buf.write("\u0150\3\2\2\2\u0152\u0153\3\2\2\2\u0153\u0151\3\2\2\2")
        buf.write("\u0153\u0154\3\2\2\2\u0154T\3\2\2\2\u0155\u0158\5Y-\2")
        buf.write("\u0156\u0158\5W,\2\u0157\u0155\3\2\2\2\u0157\u0156\3\2")
        buf.write("\2\2\u0158\u0159\3\2\2\2\u0159\u015a\b+\2\2\u015aV\3\2")
        buf.write("\2\2\u015b\u015f\7%\2\2\u015c\u015e\n\4\2\2\u015d\u015c")
        buf.write("\3\2\2\2\u015e\u0161\3\2\2\2\u015f\u015d\3\2\2\2\u015f")
        buf.write("\u0160\3\2\2\2\u0160\u0162\3\2\2\2\u0161\u015f\3\2\2\2")
        buf.write("\u0162\u0163\t\4\2\2\u0163X\3\2\2\2\u0164\u0166\t\5\2")
        buf.write("\2\u0165\u0164\3\2\2\2\u0166\u0167\3\2\2\2\u0167\u0165")
        buf.write("\3\2\2\2\u0167\u0168\3\2\2\2\u0168Z\3\2\2\2\u0169\u016a")
        buf.write("\t\6\2\2\u016a\\\3\2\2\2\u016b\u016c\t\7\2\2\u016c^\3")
        buf.write("\2\2\2\r\2\u0131\u013a\u013f\u0145\u0149\u014e\u0153\u0157")
        buf.write("\u015f\u0167\3\b\2\2")
        return buf.getvalue()


class rtlilLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    STRING = 37
    ID = 38
    VALUE = 39
    INT = 40
    EOL = 41
    SKIP_ = 42

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'autoidx'", "'module'", "'end'", "'parameter'", "'wire'", "'width'", 
            "'offset'", "'input'", "'output'", "'inout'", "'upto'", "'signed'", 
            "'connect'", "'['", "':'", "']'", "'{'", "'}'", "'cell'", "'real'", 
            "'process'", "'switch'", "'case'", "','", "'sync'", "'global'", 
            "'init'", "'always'", "'low'", "'high'", "'posedge'", "'negedge'", 
            "'edge'", "'update'", "'assign'", "'attribute'" ]

    symbolicNames = [ "<INVALID>",
            "STRING", "ID", "VALUE", "INT", "EOL", "SKIP_" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "STRING", "ID", "VALUE", 
                  "INT", "EOL", "SKIP_", "COMMENT", "WS", "DECIMAL_DIGIT", 
                  "BINARY_DIGIT" ]

    grammarFileName = "rtlil.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.9.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


